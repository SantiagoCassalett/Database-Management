{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Function that will return the average values for each experiment for all genes that are associated\
# with the input go term\
#input is a go term\
\
CREATE DEFINER=``@`%` FUNCTION `getAVGExp`(`go_term` VARCHAR(40)) RETURNS text CHARSET latin1\
BEGIN\
	#Declare the output variable - go_values as type text\
    \
	DECLARE go_values TEXT;\
\
	#Creates a temporary table to allow multiple values to be saved in a variable\
	\
	create TEMPORARY TABLE tmptable3(\
    	row_names INT PRIMARY KEY AUTO_INCREMENT,\
	    binding_name INT(40),\
		secondDataID1_list INT(40),\
	    thirdDataId2_list int(40),\
    	realtionship_id_list int(40),\
	    rvalues_list float(40),\
		rvalues_names varchar(40));\
    \
	#Inserts the following values into the temporary table - queries the database to obtain the \
	#values\
	#Selects the DataID of the specified go term from the Data1 table\
\
	INSERT INTO tmptable3(binding_name)\
	select DataID from Data1, DAttribute where DAttribute.DAValue=go_term and DAttribute.DataID_Data=Data1.DataID;\
\
	#Creates another temporary table to allow the following values to be saved\
	#The temporary table is the same as the previous one\
\
	Create TEMPORARY TABLE tmptable10 like tmptable3;\
	\
	#Inserts into the table the DataID_Data2 which is the gene ID from the Data table\
	# matches the go term\
\
	insert into tmptable10(secondDataID1_list)\
	select DataID_Data2 from Relationship where Relationship.DataID_Data1 = (select binding_name from tmptable3);\
\
	#Creates another temporary table to allow the following values to be saved\
	#The temporary table is the same as the previous one\
\
	Create TEMPORARY TABLE tmptable11 like tmptable10;\
\
	#Inserts into the temporary table the affy ids from the Data1 table that are associated\
	#with the gene stable ids	\
\
	insert into tmptable11(thirdDataId2_list)\
	select DataID_Data1 from Relationship, tmptable10 where Relationship.DataID_Data2 = tmptable10.secondDataID1_list;\
\
	\
	#Creates another temporary table to allow the following values to be saved\
	#The temporary table is the same as the previous one\
\
	CREATE TEMPORARY TABLE tmptable12 like tmptable11;\
	\
	#Inserts into the table the relationshipID from the relationship table that relates\
	#To the rows where Experiment.ids is matched to AffyID\
\
	insert into tmptable12(realtionship_id_list)\
	select Relationship.RelationshipID from Relationship, tmptable11 where Relationship.DataID_Data2 = tmptable11.thirdDataId2_list;\
\
    \
	#Creates another temporary table to allow the following values to be saved\
	#The temporary table is the same as the previous one\
\
	CREATE TEMPORARY TABLE tmptable13 like tmptable12;\
\
	#Inserts into the table the rvalues and the relationship ids that are associated with them\
	#This links together the experiments with the actual values for the experiments\
\
	INSERT INTO tmptable13(rvalues_list, rvalues_names)\
	select RValue, RelationshipID_Relationship  from RelationshipValue, tmptable12 where 	RelationshipValue.RelationshipID_Relationship = tmptable12.realtionship_id_list;\
\
	#Creates another temporary table, this one is filled with the average experiment values,\
	# the row names, the relationship IDs and an additional row that is used for averaging every\
	# 6th experiment value (this ensure that experiment1 values are average and then experiment 	# 2 values)\
\
	CREATE TEMPORARY TABLE tmptable14(\
        row_names2 INT(40),\
        a_r_val float,\
        r_names varchar(40),\
        modded_rows INT(40));\
\
	INSERT INTO tmptable14(row_names2, a_r_val, r_names, modded_rows)\
    select row_names, AVG(rvalues_list), rvalues_names, mod(row_names,6) from tmptable13 where rvalues_list>0 group by mod(row_names,6);\
    \
	#Selects the average values for each experiment and concats them into a string,\
	# this allows for all the values to be displayed instead of just the first value\
	# the results are stored in the declared variable: go_values\
\
    select GROUP_CONCAT(a_r_val ORDER BY row_names2 SEPARATOR ', ') from tmptable14 into go_values;\
    \
	#Returns the go_values variable\
\
    return go_values;\
    \
END}